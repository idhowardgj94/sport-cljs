{"version":3,"sources":["cljss/sheet.cljs"],"mappings":";AAKA,AAAA,AAAeA;AAEf,AAAA,AAAOC;AAAP,AACE,AAAMC,AAAI,AAAA,AAACC;AACLC,AAAK,AAAA,AAAM,AAAA,AAACC;AADlB,AAEE,AAAA,AAAA,AAACC,AAASJ;;AACV,AAACK,AAAgBL,AAAI,AAAA,AAACM;;AACtB,AAACD,AAAgBH,AAAKF;;AACtBA;;AAGJ,AAAA;AAAA;;;AAAA,AAAakB;;AAAb,AAAAX,AAAA,AACYY,AAAKC,AAAIC;AADrB,AAAA,AAAAb,AAAA,AAAA,AAAA,AAAA,AACYW,AAAAA;AADZV,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYU,AAAAA,AAAKC,AAAAA,AAAIC,AAAAA;;AADrB,AAAAT,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA,AAAKC,AAAAA,AAAIC,AAAAA;;AADrB,AAAA,AAAAR,AAAA,AACYM;;;;AADZ,AAAA,AAAA,AACGT,AAASS,AAAKC,AAAIC;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYF,AAAAA;AADZ,AACYA,AAAAA,AAAKC,AAAIC;;AADrB,AAAAd,AACYY,AAAKC,AAAIC;;;;AADrB,AAAAP,AAAA,AAEWK;AAFX,AAAA,AAAAX,AAAA,AAAA,AAAA,AAAA,AAEWW,AAAAA;AAFXV,AAAA,AAAAM,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWU,AAAAA;;AAFX,AAAAP,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWO,AAAAA;;AAFX,AAAA,AAAAN,AAAA,AAEWM;;;;AAFX,AAAA,AAAA,AAEGJ,AAAQI;AAFX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEWA,AAAAA;AAFX,AAEWA,AAAAA;;AAFX,AAAAL,AAEWK;;;;AAFX,AAAAH,AAAA,AAGYG;AAHZ,AAAA,AAAAX,AAAA,AAAA,AAAA,AAAA,AAGYW,AAAAA;AAHZV,AAAA,AAAAQ,AAAA,AAAAN,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGYU,AAAAA;;AAHZ,AAAAP,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGYO,AAAAA;;AAHZ,AAAA,AAAAN,AAAA,AAGYM;;;;AAHZ,AAAA,AAAA,AAGGF,AAASE;AAHZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGYA,AAAAA;AAHZ,AAGYA,AAAAA;;AAHZ,AAAAH,AAGYG;;;;AAHZ,AAKA,AAAA;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAASK;;AAAT,AAAA,AAAA,AAAA,AAASA,AAEGR,AAAKY,AAAKV;;AAFtB,AAAA,AAAA,AAEYF;AAFZ,AAGI,AAAM,AAASA;AAAf,AACE,AAAO,AAAAa,AAAW,AAAA,AAAA,AAAmClC;;AADvD;;AAEA,AAAU,AAAAmC,AAAA,AAAAC,AAAEJ;AAAF,AAAA,AAAAG,AAAAA,AAAAA,AAAQZ,AAAAA;;AAAlB;;AAAA,AACE,AAACc,AAAML,AAAMM,AAAKf;;AAClB,AAAMU,AAAK,AAAI,AAACM,AAAKN,AAAM,AAACA,AAAAA,AAAAA,AAAMA;AAC5BO,AAAY,AAAA,AAACC,AAAS,AAAA,AAACA,AAASV;AADtC,AAEE,AAAIW;AACF,AAACnC,AAAgBL,AAAI,AAACM,AAAmByB;;AACzC,AAAA,AACE,AAAaF,AAAME,AAAKO;AAD1B,AAAAG,AAEkBC;AAFlB,AAGI,AAAMF;AAAN,AACE,AAAA,AAACG,AAAmCZ;;AADtC;;;;;;AAdd,AAAA,AAAA,AAAA,AAASJ,AAgBER;;AAhBX,AAAA,AAAA,AAgBWA;AAhBX,AAiBQnB,AAEA,AAAA,AAAcA;;;AAnBtB,AAAA,AAAA,AAAA,AAAS2B,AAoBGR;;AApBZ,AAAA,AAAA,AAoBYA;AApBZ,AAqBI,AAACyB,AAAE,AAAA,AAAAV,AAACW,AAAOf,AAAOhC;;;AArBtB,AAAA,AAAA,AAAS6B;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI,AAAO5B,AAAI6B,AAAMC;AAA1B,AAAA,AAAAH,AAAgB3B,AAAI6B,AAAMC;;;AAAjBH,AAuBT,AAAA,AAAMmB;AAAN,AACE,AAAM9C,AAAI,AAACD;AACL8B,AAAM,AAAA,AAACU,AAASvC;AADtB,AAEE,AAAA2B,AAAQ3B,AAAI6B,AAAM,AAAA,AAACkB","names":["cljss.sheet/limit","cljss.sheet/make-style-tag","tag","goog.dom/createElement","head","goog.dom/getElementsByTagNameAndClass","goog.object/set","goog.dom/appendChild","goog.dom/createTextNode","cljss$sheet$ISheet$insert_BANG_$dyn","x__4428__auto__","m__4429__auto__","cljss.sheet/insert!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","cljss$sheet$ISheet$flush_BANG_$dyn","cljss.sheet/flush!","cljss$sheet$ISheet$filled_QMARK_$dyn","cljss.sheet/filled?","cljss.sheet/ISheet","this","css","cls-name","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","cljss.sheet/Sheet","cljss.sheet/->Sheet","sheet","cache","rule","js/Error","fexpr__41475","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/conj","cljs.core/ifn?","rules-count","goog.object/get","cljss.utils/dev?","e41476","e","js/console.warn","cljs.core._EQ_","cljs.core/count","cljss.sheet/create-sheet","cljs.core.atom"],"sourcesContent":["(ns cljss.sheet\n  (:require [goog.object :as gobj]\n            [goog.dom :as dom]\n            [cljss.utils :refer [dev?]]))\n\n(def ^:private limit 65534)\n\n(defn- make-style-tag []\n  (let [tag (dom/createElement \"style\")\n        head (aget (dom/getElementsByTagNameAndClass \"head\") 0)]\n    (gobj/set tag \"type\" \"text/css\")\n    (dom/appendChild tag (dom/createTextNode \"\"))\n    (dom/appendChild head tag)\n    tag))\n\n\n(defprotocol ISheet\n  (insert! [this css cls-name])\n  (flush! [this])\n  (filled? [this]))\n\n(deftype Sheet [tag sheet cache]\n  ISheet\n  (insert! [this rule cls-name]\n    (when (filled? this)\n      (throw (js/Error. (str \"A stylesheet can only have \" limit \" rules\"))))\n    (when-not (@cache cls-name)\n      (swap! cache conj cls-name)\n      (let [rule (if (ifn? rule) (rule) rule)\n            rules-count (gobj/get (gobj/get sheet \"cssRules\") \"length\")]\n        (if dev?\n          (dom/appendChild tag (dom/createTextNode rule))\n          (try\n            (.insertRule sheet rule rules-count)\n            (catch :default e\n              (when dev?\n                (js/console.warn \"Illegal CSS rule\" rule))))))))\n  (flush! [this]\n    (-> tag\n        .-parentNode\n        (.removeChild tag)))\n  (filled? [this]\n    (= (count @cache) limit)))\n\n(defn create-sheet []\n  (let [tag (make-style-tag)\n        sheet (gobj/get tag \"sheet\")]\n    (Sheet. tag sheet (atom #{}))))\n"]}